AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  demo-sam-app

  Sample SAM Template for demo-sam-app

Parameters:
  CodeSigningConfigArn:
    Type: String
    Description: Asserts that lambdas are signed when deployed.
    Default: "none"

  Bar:
    Type: String
    Default: "none"
    Description: SSM parameter injection example

Conditions:
  UseCodeSigning:
    Fn::Not:
      - Fn::Equals:
          - !Ref CodeSigningConfigArn
          - "none"

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    Timeout: 20

Resources:

  APIGatewayAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7
      KmsKeyId: !GetAtt HelloWorldKmsKey.Arn
      Tags:
        - Key: BillingOrganization
          Value: GDS
        - Key: BillingProgramme
          Value: One Login for Government
        - Key: BillingProject
          Value: Dev Platform
        - Key: BillingEnvironment
          Value: Demo
        - Key: Service
          Value: backend
        - Key: Name
          Value: APIGatewayAccessLogGroup
        - Key: Source
          Value: alphagov/di-devplatform-demo-sam-app/sam-app/template.yaml

  HelloWorldRestApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      AccessLogSetting:
        Format: "$context.requestId $context.httpMethod $context.path"
        DestinationArn: !GetAtt APIGatewayAccessLogGroup.Arn
      CacheClusterEnabled: true
      CacheClusterSize: "0.5"
      TracingEnabled: true
      Tags:
        BillingOrganization: GDS
        BillingProgramme: One Login for Government
        BillingProject: Dev Platform
        BillingEnvironment: Demo
        Service: backend
        Name: HelloWorldRestApi
        Source: alphagov/di-devplatform-demo-sam-app/sam-app/template.yaml


  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: HelloWorldFunction
      Handler: helloworld.App::handleRequest
      Runtime: java11
      Architectures:
        - x86_64
      MemorySize: 512
      KmsKeyArn: !GetAtt HelloWorldKmsKey.Arn
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref HelloWorldTable
        - DynamoDBWritePolicy:
            TableName: !Ref HelloWorldTable
        - S3ReadPolicy:
            BucketName: !Ref HelloWorldBucket
        - SNSPublishMessagePolicy:
            TopicName: !Ref HelloWorldTopic
        - SQSSendMessagePolicy:
            QueueName: !Ref HelloWorldQueue
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get
            RestApiId: !Ref HelloWorldRestApi
      AutoPublishAlias: HelloWorldFunction
      DeploymentPreference:
        Type: Canary10Percent5Minutes
        Alarms:
          - !Ref HelloWorldFunctionTooManyRequestsAlarm
        Hooks:
          PreTraffic: !Ref PreTrafficHook
      Tags:
        BillingOrganization: GDS
        BillingProgramme: One Login for Government
        BillingProject: Dev Platform
        BillingEnvironment: Demo
        Service: backend
        Name: HelloWorldFunction
        Source: alphagov/di-devplatform-demo-sam-app/sam-app/template.yaml

  HelloWorldFunction2:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: HelloWorldFunction2
      Handler: helloworld2.App2::handleRequest
      Runtime: java11
      Architectures:
        - x86_64
      MemorySize: 512
      KmsKeyArn: !GetAtt HelloWorldKmsKey.Arn
      Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
        Variables:
          PARAM1: VALUE
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello2
            Method: get
            RestApiId: !Ref HelloWorldRestApi
      Tags:
        BillingOrganization: GDS
        BillingProgramme: One Login for Government
        BillingProject: Dev Platform
        BillingEnvironment: Demo
        Service: backend
        Name: HelloWorldFunction
        Source: alphagov/di-devplatform-demo-sam-app/sam-app/template.yaml

  PreTrafficHook:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join
        - "_"
        - - "CodeDeployHook"
          - !Ref AWS::StackName
          - "PreTrafficHook"
          - Fn::Select:
              - 4
              - Fn::Split:
                  - '-'
                  - Fn::Select:
                      - 2
                      - Fn::Split:
                          - /
                          - Ref: AWS::StackId
      Handler: preTrafficHook.handler
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "codedeploy:PutLifecycleEventHookExecutionStatus"
              Resource:
                !Sub 'arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ServerlessDeploymentApplication}/*'
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "lambda:InvokeFunction"
              Resource: !Ref HelloWorldFunction.Version
      Runtime: nodejs14.x
      KmsKeyArn: !GetAtt HelloWorldKmsKey.Arn
      Environment:
        Variables:
          NewVersion: !Ref HelloWorldFunction.Version
      Tags:
        BillingOrganization: GDS
        BillingProgramme: One Login for Government
        BillingProject: Dev Platform
        BillingEnvironment: Demo
        Service: backend
        Name: PreTrafficHook
        Source: alphagov/di-devplatform-demo-sam-app/sam-app/template.yaml

  HelloWorldTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: "PAY_PER_REQUEST"
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      AttributeDefinitions:
        - AttributeName: "Id"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "Id"
          KeyType: "HASH"
      SSESpecification:
        KMSMasterKeyId: !Ref HelloWorldKmsKey
        SSEEnabled: true
        SSEType: "KMS"
      Tags:
        - Key: BillingOrganization
          Value: GDS
        - Key: BillingProgramme
          Value: One Login for Government
        - Key: BillingProject
          Value: Dev Platform
        - Key: BillingEnvironment
          Value: Demo
        - Key: Service
          Value: backend
        - Key: Name
          Value: HelloWorldTable
        - Key: Source
          Value: alphagov/di-devplatform-demo-sam-app/sam-app/template.yaml

  HelloWorldBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Join
        - "-"
        - - !Ref AWS::StackName
          - "helloworldbucket"
          - Fn::Select:
              - 4
              - Fn::Split:
                  - '-'
                  - Fn::Select:
                      - 2
                      - Fn::Split:
                          - /
                          - Ref: AWS::StackId
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LoggingConfiguration:
        DestinationBucketName: !Join
          - "-"
          - - !Ref AWS::StackName
            - "helloworldbucket"
            - Fn::Select:
                - 4
                - Fn::Split:
                    - '-'
                    - Fn::Select:
                        - 2
                        - Fn::Split:
                            - /
                            - Ref: AWS::StackId
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      VersioningConfiguration:
        Status: Enabled
      Tags:
        - Key: BillingOrganization
          Value: GDS
        - Key: BillingProgramme
          Value: One Login for Government
        - Key: BillingProject
          Value: Dev Platform
        - Key: BillingEnvironment
          Value: Demo
        - Key: Service
          Value: backend
        - Key: Name
          Value: HelloWorldBucket
        - Key: Source
          Value: alphagov/di-devplatform-demo-sam-app/sam-app/template.yaml

  HelloWorldKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: 'kms:*'
            Resource: '*'
          - Effect: Allow
            Principal:
              Service: !Sub "logs.${AWS::Region}.amazonaws.com"
            Action:
              - "kms:Encrypt*"
              - "kms:Decrypt*"
              - "kms:ReEncrypt*"
              - "kms:GenerateDataKey*"
              - "kms:Describe*"
            Resource: "*"
            Condition:
              ArnLike:
                "kms:EncryptionContext:aws:logs:arn": !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
      Tags:
        - Key: BillingOrganization
          Value: GDS
        - Key: BillingProgramme
          Value: One Login for Government
        - Key: BillingProject
          Value: Dev Platform
        - Key: BillingEnvironment
          Value: Demo
        - Key: Service
          Value: backend
        - Key: Name
          Value: HelloWorldKmsKey
        - Key: Source
          Value: alphagov/di-devplatform-demo-sam-app/sam-app/template.yaml

  HelloWorldTopic:
    Type: AWS::SNS::Topic
    Properties:
      KmsMasterKeyId: !Ref HelloWorldKmsKey
      Tags:
        - Key: BillingOrganization
          Value: GDS
        - Key: BillingProgramme
          Value: One Login for Government
        - Key: BillingProject
          Value: Dev Platform
        - Key: BillingEnvironment
          Value: Demo
        - Key: Service
          Value: backend
        - Key: Name
          Value: HelloWorldTopic
        - Key: Source
          Value: alphagov/di-devplatform-demo-sam-app/sam-app/template.yaml

  HelloWorldQueue:
    Type: AWS::SQS::Queue
    Properties:
      KmsMasterKeyId: !Ref HelloWorldKmsKey
      Tags:
        - Key: BillingOrganization
          Value: GDS
        - Key: BillingProgramme
          Value: One Login for Government
        - Key: BillingProject
          Value: Dev Platform
        - Key: BillingEnvironment
          Value: Demo
        - Key: Service
          Value: backend
        - Key: Name
          Value: HelloWorldQueue
        - Key: Source
          Value: alphagov/di-devplatform-demo-sam-app/sam-app/template.yaml

  HelloWorldFunctionTooManyRequestsAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: >
        Test alarm to trigger if the lambda receives many requests.
      MetricName: Invocations
      Namespace: AWS/Lambda
      Statistic: Sum
      Dimensions:
        - Name: FunctionName
          Value: !Ref HelloWorldFunction
      Period: 300
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 10
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching

Outputs:
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${HelloWorldRestApi}.execute-api.${AWS::Region}.amazonaws.com/${HelloWorldRestApi.Stage}/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
  HelloWorldFunction2:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction2.Arn
  HelloWorldFunctionIamRole2:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunction2Role.Arn
