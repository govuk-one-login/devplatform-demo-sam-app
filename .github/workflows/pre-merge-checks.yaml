name: Pre-merge checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: "Run SonarCloud Scan"
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Commenting out until we understand how to work with code coverage
      # - name: SonarQube Quality Gate check
      #   id: sonarqube-quality-gate-check
      #   uses: sonarsource/sonarqube-quality-gate-action@master
      #   # Force to fail step after specific time
      #   timeout-minutes: 5
      #   env:
      #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # - name: "Example show SonarQube Quality Gate Status value"
      #   run: echo "The Quality Gate status is ${{ steps.sonarqube-quality-gate-check.outputs.quality-gate-status }}"

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Cache Python packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip3.9-${{ hashFiles('.github/workflows/pre-merge-checks.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pip3.9-

      - name: Install linters
        run: pip install 'cfn-lint~=0.74.0' 'poetry~=0.12.17' 'checkov~=2.2.130'

      - name: Lint templates
        run: '.github/scripts/lint.sh'
        shell: bash

      - name: Lint Python
        uses: py-actions/flake8@v2

      - name: Lint Shell
        uses: ludeeus/action-shellcheck@master
        env:
          SHELLCHECK_OPTS: --shell=bash --external-sources

  security-check:
    permissions:
      actions: read
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Checkov GitHub Action
        uses: bridgecrewio/checkov-action@v12
        with:
          # This will add both a CLI output to the console and create a results.sarif file
          framework: cloudformation
          quiet: true
          output_format: cli,sarif
          output_file_path: console,results.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        # Results are generated only on a success or failure
        # this is required since GitHub by default won't run the next step
        # when the previous one has failed. Security checks that do not pass will 'fail'.
        if: success() || failure()
        with:
          sarif_file: results.sarif

  sustainbility-scan:
    permissions:
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Move template files to scan folder
        run: |
          mkdir ./scanned-templates
          mv $GITHUB_WORKSPACE/cloudfront/template.yaml ./scanned-templates/cloudfront.yaml
          mv $GITHUB_WORKSPACE/node/template.yaml ./scanned-templates/node.yaml
          mv $GITHUB_WORKSPACE/sam-app/template.yaml ./scanned-templates/sam-app.yaml


      - name: AWS Sustainability Scanner
        uses: aws-actions/sustainability-scanner@v1
        id: scanner
        with:
          directory: ./scanned-templates

      # Use scanner output to create a comment on pull request
      - name: Comment on pull request
        uses: actions/github-script@v7
        with:
          script: |
            result=${{ (steps.scanner.outputs.results) }}
            const score = result.sustainability_score
            const number_failed_rules = result.failed_rules.length

            if (score === 0) {
              body = `✅ Your current sustainability score is **${score}**. Sustainability scanner did not find any improvements to apply to your template.`
            } else {
              body = `❌ Your current sustainability score is **${score}**. Sustainability scanner suggests **${number_failed_rules}** improvements to apply to your template.\nCheck out the details of the sustainability scanner here: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })
