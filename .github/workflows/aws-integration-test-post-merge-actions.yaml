name: Identity Broker Post Merge UI

on:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  publish-integration-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: ./integration
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Set up AWS creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.BROKER_GH_ACTIONS_ROLE_ARN }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Cache Image Layers
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      - name: Build, tag, and push testing image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.BROKER_ECR_REPOSITORY_NAME }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  publish-ui-api:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: publish-integration-test
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: ./broker
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip3.9-${{ hashFiles('.github/workflows/post-merge-ui.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pip3.9-

      - name: Install Poetry
        run: pip install 'poetry'

      - name: Set up SAM cli
        uses: aws-actions/setup-sam@v1

      - name: Set up AWS creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.BROKER_GH_ACTIONS_ROLE_ARN }}
          aws-region: eu-west-2

      - name: SAM validate
        run: sam validate

      - name: SAM build and test
        run: ./build.sh

      - name: Deploy UI API
        uses: alphagov/di-devplatform-upload-action@v2
        with:
          artifact-bucket-name: ${{ secrets.BROKER_ARTIFACT_SOURCE_BUCKET_NAME }}
          signing-profile-name: ${{ secrets.SIGNING_PROFILE_NAME }}
          working-directory: ./broker