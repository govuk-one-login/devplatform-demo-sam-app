name: AWS Integration Test Deploy

on:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  publish-integration-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: ./aws-integration-test/aws-integration
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Disk Space Usage
        run: |
          echo "Free space:"
          df -h

      - name: Set up AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_INTEGRATION_TEST_GH_ACTIONS_ROLE_ARN }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Install Cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v1.9.0'

      #  Disabling this caching mechanism to see why its filling up disk
      # - name: Cache Image Layers
      #   uses: jpribyl/action-docker-layer-caching@v0.1.1
      #   continue-on-error: true

      - name: Disk Space Usage
        run: |
          echo "Free space:"
          df -h
          echo "docker image ls:"
          docker image ls
          echo "docker container ls -a:"
          docker container ls -a

      - name: Build, tag, and push testing image to Amazon ECR
        env:
          CONTAINER_SIGN_KMS_KEY: ${{ secrets.CONTAINER_SIGN_KMS_KEY }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_INTEGRATION_TEST_ECR_REPOSITORY_NAME }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          cosign sign --key awskms:///${CONTAINER_SIGN_KMS_KEY} $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Disk Space Usage
        run: |
          echo "Free space:"
          df -h
          echo "docker image ls:"
          docker image ls
          echo "docker container ls -a:"
          docker container ls -a
          
  deploy-test-stack:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: publish-integration-test
    permissions:
      id-token: write
      contents: read
    defaults:
      run:
        working-directory: ./aws-integration-test/app
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Disk Space
        run: |
          echo "Free space:"
          df -h

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Cache Python packages
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip3.9-${{ hashFiles('.github/workflows/aws-integration-test-post-merge-actions.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pip3.9-

      - name: Install Poetry
        run: pip install 'poetry'

      - name: Set up SAM cli
        uses: aws-actions/setup-sam@v2

      - name: Set up AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_INTEGRATION_TEST_GH_ACTIONS_ROLE_ARN }}
          aws-region: eu-west-2

      - name: SAM validate
        run: sam validate

      - name: SAM build and test
        run: ./build.sh

      - name: Deploy
        uses: govuk-one-login/devplatform-upload-action@v3.5
        with:
          artifact-bucket-name: ${{ secrets.AWS_INTEGRATION_TEST_ARTIFACT_SOURCE_BUCKET_NAME }}
          signing-profile-name: ${{ secrets.SIGNING_PROFILE_NAME }}
          working-directory: ./aws-integration-test/app
