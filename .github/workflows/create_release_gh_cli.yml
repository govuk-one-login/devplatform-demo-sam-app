name: Create Release from gh CLI

on:
  push:
    branches:
      - PSREDEV-2337  # Your default branch

jobs:
  build_app_versions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Find applications
        id: find_apps
        run: |
          apps=$(find . -maxdepth 1 -type d ! -name ".*" | sed 's/^\.\///g' | tr '\n' ' ')
          echo "apps=$apps" >> $GITHUB_OUTPUT

      - name: Build app version list
        run: |
          apps_string="${{ steps.find_apps.outputs.apps }}"
          echo "$app_string"
          apps=($apps_string)
          app_versions=() # Initialize as an array
          today=$(date +"%d%m%y")
          for app in "${apps[@]}"; do # Correctly quote the array element
            version="${app}-${today}"
            echo "$version"
            app_versions[$app]=$version
          done
          #echo "app_versions=$(jq -R '. | to_entries[] | [.key, .value] | @tsv' <<< "${app_versions[@]}")" >> $GITHUB_OUTPUT

  use_app_versions:
    needs: build_app_versions
    runs-on: ubuntu-latest
    steps:
      - name: Use app version list
        run: |
          app_versions_json="${{ needs.build_app_versions.outputs.app_versions }}"
          app_versions=$(echo "$app_versions_json" | jq -r '. | to_entries[] | [.key, .value] | @tsv')
          while IFS=$'\t' read -r app version; do
            echo "App: $app, Version: $version"
            # Your commands to process each app and version here
          done <<< "$app_versions"

  #create-releases:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout code
  #      uses: actions/checkout@v3
  #      with:
  #        fetch-depth: 0
  #        ref: PSREDEV-2337

   #   - name: Run release script
   #     run: |
   #       ./create_gh_release_monorepo.sh
   #   #- name: Push tags
   #   #  run: git push origin --tags