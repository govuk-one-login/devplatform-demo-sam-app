name: Node-with-waf deploy using Environment secrets
run-name: Node-with-waf deploy using Environment secrets to ${{ inputs.environment }}

################################ Prerequisite setup ################################
# Set the customization template for an OpenID Connect (OIDC) subject claim for the repository.
# You must authenticate using an access token with the repo scope to curl the endpoint.
#
#        curl -L \
#          -X PUT \
#          -H "Accept: application/vnd.github+json" \
#          -H "Authorization: Bearer <YOUR-TOKEN>"\
#          -H "X-GitHub-Api-Version: 2022-11-28" \
#          https://api.github.com/repos/govuk-one-login/devplatform-demo-sam-app/actions/oidc/customization/sub \
#          -d '{"use_default":false,"include_claim_keys":["repo","context","ref"]}'
#
# With the above setup, example sub from AssumeRoleWithWebIdentity as seen in Cloudtrail in build account
#        "subjectFromWebIdentityToken": "repo:govuk-one-login/devplatform-demo-sam-app:environment:build:ref:refs/heads/main",

on:
  push:
    branches:
      - plat-4254
  # workflow_dispatch:
  #   inputs:
  #     environment:
  #       description: 'Environment to run against'
  #       type: environment
  #       required: true

defaults:
  run:
    shell: bash
    working-directory: ./node-with-waf

jobs:
  upload-traffic-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.NODE_WITH_WAF_ROLE_TO_ASSUME }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Install Cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v1.9.0'
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Upload to ECR and tag
        uses: govuk-one-login/devplatform-upload-action-ecr@1.2.1
        with:
          role-to-assume-arn: ${{ secrets.NODE_WITH_WAF_ROLE_TO_ASSUME }}
          container-sign-kms-key-arn: ${{ secrets.DEV_CONTAINER_SIGN_KMS_KEY }}
          working-directory: node-with-waf
          ecr-repo-name: ${{ secrets.ECR_NODE_WITH_WAF_REPOSITORY }}
          artifact-bucket-name: ${{ secrets.NODE_WITH_WAF_ARTIFACT_BUCKET }}
          private-docker-registry: khw46367.live.dynatrace.com
          private-docker-login-username: khw46367
          private-docker-login-password: ${{ secrets.DYNATRACE_PAAS_TOKEN }}