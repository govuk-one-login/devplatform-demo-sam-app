name: SAM app deploy using Environment secrets

################################ Prerequisite setup ################################
# Set the customization template for an OpenID Connect (OIDC) subject claim for the repository.
# You must authenticate using an access token with the repo scope to curl the endpoint.
#
#        curl -L \
#          -X PUT \
#          -H "Accept: application/vnd.github+json" \
#          -H "Authorization: Bearer <YOUR-TOKEN>"\
#          -H "X-GitHub-Api-Version: 2022-11-28" \
#          https://api.github.com/repos/alphagov/di-devplatform-demo-sam-app/actions/oidc/customization/sub \
#          -d '{"use_default":false,"include_claim_keys":["repo","context","ref"]}'
#
# With the above setup, example sub from AssumeRoleWithWebIdentity as seen in Cloudtrail in build account
#        "subjectFromWebIdentityToken": "repo:alphagov/di-devplatform-demo-sam-app:environment:build:ref:refs/heads/main",

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run against'
        type: environment
        required: true

defaults:
  run:
    shell: bash
    working-directory: ./sam-app

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Set up SAM cli
        uses: aws-actions/setup-sam@v2

      - name: Set up AWS creds
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ secrets.SAM_APP_GH_ACTIONS_ROLE_ARN }}
          aws-region: eu-west-2

      - name: SAM validate
        run: sam validate

      - name: SAM build and test
        run: sam build

      - name: Deploy SAM app
        uses: alphagov/di-devplatform-upload-action@v3.2
        with:
            artifact-bucket-name: ${{ secrets.SAM_APP_ARTIFACT_BUCKET_NAME }}
            signing-profile-name: ${{ secrets.SIGNING_PROFILE_NAME }}
            working-directory: ./sam-app
