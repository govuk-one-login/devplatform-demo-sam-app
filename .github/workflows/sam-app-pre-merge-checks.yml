name: SAM app test and build

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      checks: write
      id-token: write
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Set up JDK 11
        uses: actions/setup-java@v5
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle

      - name: Set up SAM cli
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true  # this caches installation but is only available on Linux x86-64 runners

      - name: Set up AWS creds
        uses: aws-actions/configure-aws-credentials@v5
        with:
          role-to-assume: ${{ secrets.SAM_APP_VALIDATE_ROLE_ARN }}
          aws-region: eu-west-2

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Build lambda1
        run: ./gradlew clean build
        working-directory: ./sam-app/HelloWorldFunction

      - name: Build lambda2
        run: ./gradlew clean build
        working-directory: ./sam-app/HelloWorldFunction2

      - name: Test lambda1
        run: ./gradlew clean test
        working-directory: ./sam-app/HelloWorldFunction

      - name: Test lambda2
        run: ./gradlew clean test
        working-directory: ./sam-app/HelloWorldFunction2

      - name: Publish test results
        uses: mikepenz/action-junit-report@v5
        if: always() # always run even if the previous step fails
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

      - name: Set up JDK 17 for Sonar
        uses: actions/setup-java@v5
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Sonar scan
        if: ${{ github.actor != 'dependabot[bot]' }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonar --info
        working-directory: ./sam-app/HelloWorldFunction

      - name: SAM validate
        run: sam validate
        working-directory: ./sam-app
