name: Node server build and deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

defaults:
  run:
    shell: bash
    working-directory: ./node

jobs:
  deploy-traffic-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.NODE_ROLE_TO_ASSUME }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Install Cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v1.9.0'

      - name: Build, tag, and push testing image to Amazon ECR
        working-directory: node/tests/traffic-test
        env:
          CONTAINER_SIGN_KMS_KEY: ${{ secrets.CONTAINER_SIGN_KMS_KEY }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.TRAFFIC_ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          cosign sign --key awskms:///${CONTAINER_SIGN_KMS_KEY} $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Build, tag, and push post-deployment testing image to Amazon ECR
        working-directory: node/tests/post-deployment-test
        env:
          CONTAINER_SIGN_KMS_KEY: ${{ secrets.CONTAINER_SIGN_KMS_KEY }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.TEST_ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          cosign sign --key awskms:///${CONTAINER_SIGN_KMS_KEY} $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Upload to ECR and tag
        uses: govuk-one-login/devplatform-upload-action-ecr@1.2.4
        with:
          role-to-assume-arn: ${{ secrets.NODE_ROLE_TO_ASSUME }}
          container-sign-kms-key-arn: ${{ secrets.CONTAINER_SIGN_KMS_KEY }}
          working-directory: node
          ecr-repo-name: ${{ secrets.ECR_REPOSITORY }}
          artifact-bucket-name: ${{ secrets.NODE_ARTIFACT_BUCKET }}
          private-docker-registry: khw46367.live.dynatrace.com
          private-docker-login-username: khw46367
          private-docker-login-password: ${{ secrets.DYNATRACE_PAAS_TOKEN }}
